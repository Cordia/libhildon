#!/usr/bin/make -f
# -*- makefile -*-
# Sample debian/rules that uses debhelper.
# GNU copyright 1997 to 1999 by Joey Hess.

# Uncomment this to turn on verbose mode.
#export DH_VERBOSE=1

SOURCE_DIR=$(CURDIR)

# These are used for cross-compiling and for saving the configure script
# from having to guess our platform (since we know it already)
DEB_HOST_GNU_TYPE   ?= $(shell dpkg-architecture -qDEB_HOST_GNU_TYPE)
DEB_BUILD_GNU_TYPE  ?= $(shell dpkg-architecture -qDEB_BUILD_GNU_TYPE)


CFLAGS = -Wall -g

ifneq (,$(findstring noopt,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -O0
else
	CFLAGS += -O2
endif

# Use soft-float and thumb mode if it enabled. 
ifneq (,$(findstring thumb,$(DEB_BUILD_OPTIONS)))
	CFLAGS += -mthumb
endif

ifeq (,$(findstring nodocs,$(DEB_BUILD_OPTIONS)))
ENABLE_GTK_DOC = --enable-gtk-doc
else
ENABLE_GTK_DOC = --disable-gtk-doc
endif

ifeq (,$(findstring nostrip,$(DEB_BUILD_OPTIONS)))
	INSTALL_PROGRAM += -s
endif

# shared library versions, option 1
# version=0.0.0 
# major=0
# option 2, assuming the library is created as src/.libs/libfoo.so.2.0.5 or so
version=`ls src/.libs/lib*.so.* | \
awk '{if (match($$0,/[0-9]+\.[0-9]+\.[0-9]+$$/)) print substr($$0,RSTART)}'`

major=`ls src/.libs/lib*.so.* | \
awk '{if (match($$0,/\.so\.[0-9]+$$/)) print substr($$0,RSTART+4)}'`

config.status: $(SOURCE_DIR)/configure
	dh_testdir
#	Add here commands to configure the package.
	CFLAGS="$(CFLAGS)" ./configure              \
               --host=$(DEB_HOST_GNU_TYPE)          \
               --build=$(DEB_BUILD_GNU_TYPE)        \
               --prefix=/usr                        \
               --mandir=\$${prefix}/share/man       \
               --infodir=\$${prefix}/share/info     \
               --with-doc-dir=\$${prefix}/share/doc \
               --disable-dependency-tracking        \
	       $(ENABLE_GTK_DOC)

$(SOURCE_DIR)/configure:
	AUTOGEN_SUBDIR_MODE=1 NOCONFIGURE=yes $(SOURCE_DIR)/autogen.sh


build: build-stamp
build-stamp:  config.status
	dh_testdir
#	Add here commands to compile the package.
	$(MAKE)
	touch build-stamp

clean:
	dh_testdir
	dh_testroot
	rm -f build-stamp 
	rm -rf debian/build
#	Add here commands to clean up after the build process.
	-$(MAKE) distclean
ifneq "$(wildcard /usr/share/misc/config.sub)" ""
	cp -f /usr/share/misc/config.sub config.sub
endif
ifneq "$(wildcard /usr/share/misc/config.guess)" ""
	cp -f /usr/share/misc/config.guess config.guess
endif
	dh_clean 


install: build
	dh_testdir
	dh_testroot
	dh_clean -k 
	dh_installdirs

#	Add here commands to install the package into debian/build
	$(MAKE) install DESTDIR=$(CURDIR)/debian/build

	ln -s -f libhildon-1.so $(CURDIR)/debian/build/usr/lib/libhildon_1.so 
	ln -s -f libhildon-1.so.0 $(CURDIR)/debian/build/usr/lib/libhildon_1.so.0
	ln -s -f libhildon-1.so.0.0.0 $(CURDIR)/debian/build/usr/lib/libhildon_1.so.0.0.0 

#	for the -dbg package
	rm -rf $(CURDIR)/debian/build/usr/lib/debug
#	-mkdir -p $(CURDIR)/debian/build/usr/lib/debug
#	-cp -vd $(CURDIR)/debian/build/usr/lib/lib*.so* $(CURDIR)/debian/build/usr/lib/debug


# Build architecture-independent files here.
binary-indep: build install
# We have nothing to do by default.

# Build architecture-dependent files here.
binary-arch: build install
	dh_testdir
	dh_testroot
	dh_installdocs
	dh_installchangelogs 
#	dh_installexamples
	@if [ -d debian/build/usr/share/gtk-doc ]; then		\
	  echo "Installing gtk-doc" ;				\
	  dh_install --sourcedir=debian/build -v ;		\
	else 							\
	  echo "Skipping gtk-doc" ;				\
	  dh_install --sourcedir=debian/build -v -Xgtk-doc ;	\
	fi
	dh_installman
	dh_link
	dh_strip --dbg-package="libhildon1"
	dh_compress
	dh_fixperms
	dh_makeshlibs -V "libhildon1 (>= 1.0.11)" 
	dh_installdeb
	dh_shlibdeps
	dh_gencontrol
	dh_md5sums
	dh_builddeb

binary: binary-indep binary-arch
.PHONY: build clean binary-indep binary-arch binary install 
